plot(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
#Data wrangling, chapter 2
# read the data into memory
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
#explore structure
str(lrn14)
#Most data is in an integer form (Likert scale or age etc.) and gender is a factor
#explore dimensions
dim(lrn14)
#There are 183 observations and 60 variables
#Create analysis dataset in several steps with variables gender, age, attitude, deep, stra, surf, points (and bottom of meta.txt)
# First we access the dplyr library
library(dplyr)
# Second we specify the questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30","D06","D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# 3rd.a) we select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# 3rd.b) Fourth select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# 3rd.c) select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
# 4th. a) we scale down "Attitude"
lrn14$attitude <- lrn14$Attitude / 10
# 4th. b) we define the columns we need
keep_columns <- c("gender","Age","attitude","deep","stra","surf","Points")
# 4th. c) we combine the needed data to a skimmed dataframe
learning2014 <- select(lrn14,one_of(keep_columns))
# 4th. d) rename Age and Points
learning2014 <- rename(learning2014, age = Age, points = Points)
# 5th exclude observations where exam points = 0
learning2014 <- filter(learning2014, points > 0)
# Finally check the data
head(learning2014)
str(learning2014)
dim(learning2014)
#we got 166 observations and seven variables, nice!
#set working directory
setwd("~/Documents/IODS/git/IODS-project/data/")
#save dataset
write.csv(x = learning2014, file = "learning2014.csv")
#read the data with new name to check its integrity
test_data <- read.csv(file = "learning2014.csv",row.names = "X")
head(test_data)
str(test_data)
#Everything seems to be working fine
#Remove unused stuff
rm(deep_columns,lrn14,strategic_columns,surface_columns,test_data,deep_questions,keep_columns,strategic_questions,surface_questions)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
glimpse(math_por)
math_por <- inner_join(math, por, by = join_by,suffix = c(".math",".por"))
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets"
url_math <- paste(url, "student-mat.csv", sep = "/")
url_math
math <- read.table(url_math, sep = ";" , header=TRUE)
url_por <- paste(url, "student-por.csv", sep ="/")
url_por
por <- read.table(url_por, sep = ";", header = TRUE)
por <- read.table(url_por, sep = ";", header = TRUE)
colnames(math)
colnames(math)
colnames(por)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by,suffix = c(".math",".por"))
glimpse(math_por)
colnames(math_por)
alc <- select(math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
notjoined_columns
glimpse(alc)
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
glimpse(alc)
glimpse(alc)
library(ggplot2)
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
colnames(alc)
g1 <- ggplot(data = alc, aes(x = alc_use, fill=sex))
g1 + geom_bar()
alc <- mutate(alc, high_use = alc_use > 2)
g2 <- ggplot(data = alc, aes(x=high_use))
g2 + geom_bar() + facet_wrap("sex")
library(ggplot2)
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
colnames(alc)
g1 <- ggplot(data = alc, aes(x = alc_use, fill=sex))
g1 + geom_bar()
alc <- mutate(alc, high_use = alc_use > 2)
g2 <- ggplot(data = alc, aes(x=high_use))
g2 + geom_bar() + facet_wrap("sex")
```{r}
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets"
# web address for math class data
url_math <- paste(url, "student-mat.csv", sep = "/")
# print out the address
url_math
# read the math class questionaire data into memory
math <- read.table(url_math, sep = ";" , header=TRUE)
# web address for portuguese class data
url_por <- paste(url, "student-por.csv", sep ="/")
# print out the address
url_por
# read the portuguese class questionaire data into memory
por <- read.table(url_por, sep = ";", header = TRUE)
# look at the column names of both data
colnames(math)
colnames(por)
library(dplyr)
# common columns to use as identifiers
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by,suffix = c(".math",".por"))
glimpse(math_por)
# dplyr, math_por, join_by are available
# print out the column names of 'math_por'
colnames(math_por)
# create a new data frame with only the joined columns
alc <- select(math_por, one_of(join_by))
glimpse(alc)
# the columns in the datasets which were not used for joining the data
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
# print out the columns not used for joining
notjoined_columns
# for every column name not used for joining...
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
# glimpse at the new combined data
glimpse(alc)
library(ggplot2)
# define a new column alc_use by combining weekday and weekend alcohol use
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
colnames(alc)
# initialize a plot of alcohol use
g1 <- ggplot(data = alc, aes(x = alc_use, fill=sex))
# define the plot as a bar plot and draw it
g1 + geom_bar()
# define a new logical column 'high_use'
alc <- mutate(alc, high_use = alc_use > 2)
# initialize a plot of 'high_use'
g2 <- ggplot(data = alc, aes(x=high_use))
# draw a bar plot of high_use by sex
g2 + geom_bar() + facet_wrap("sex")
library(tidyr)
install.packages("tidyr")
library(tidyr)
glimpse(alc)
gather(alc) %>% glimpse #gather creates key and value columns for each observation
gather(alc) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") +geom_bar()
g1 <- ggplot(alc, aes(x = high_use, y = G3, col=sex))
g1 + geom_boxplot() + ylab("grade")
g2 <- ggplot(alc, aes(x=high_use,y=absences, col=sex))
g2 + geom_boxplot() + ylab("absences") + ggtitle("Student absences by alcohol consumption and sex")
m <- glm(high_use ~ failures + absences + sex, data = alc, family = "binomial")
summary(m)
coef(m)
library(boot)
?cv.glm
