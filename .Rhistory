plot(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
ls()
dir()
setwd("~/Documents/IODS/git/IODS-project/data/")
mat <- read.csv("student-mat.csv",sep = ";",header=TRUE)
dir(mat)
dim(mat)
str(mat)
dim(por)
por <- read.csv("student-por.csv", sep = ";", header = TRUE)
dim(por)
str(por)
colnames(mat %in% colnames(por))
colnames(mat %in% colnames(por))
colnames(mat)
colnames(mat[colnames(por) %in% colnames(mat)])
colnames(mat)
colnames(por)
colnames(por) %in% colnames(mat)
colnames(mat) %in% colnames(por)
library(dplyr)
join_by <- c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery","internet")
joined_data <- inner_join(mat,por,by = join_by, suffix= c(".mat",".por"))
heads(joined_data)
head(joined_data)
glimpse(joined_data)
alc_data <- select(joined_data, one_of(join_by))
glimpse(alc_data)
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
notjoined_columns <- colnames(mat)[!colnames(mat) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(joined_data, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
# for every column name not used for joining...
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(joined_data, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc_data[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc_data[column_name] <- first_column
}
}
glimpse(alc_data)
alc_data <- mutate(alc_data, alc_use = (Dalc + Walc) / 2)
alc:data <- mutate(alc_data, high_use = alc_use > 2)
alc_data <- mutate(alc_data, high_use = alc_use > 2)
glimpse(alc_data)
write.csv(x = alc_data,file = "alc.csv",sep = ";",row.names = FALSE)
write.csv(x = alc_data,file = "alc.csv",sep =";",row.names = FALSE)
write.csv(x = alc_data,file = "alc.csv",sep ="\t",row.names = FALSE)
write.csv(x = alc_data,file = "alc.csv",sep ="/t",row.names = FALSE)
write.csv(x = alc_data,file = "alc.csv",sep =",",row.names = FALSE)
write.csv(x = alc_data,file = "alc.csv")
test_data <- read.csv(file = "alc.csv",row.names = "X")
head(test_data)
rm(joined_data,mat,por,test_data,two_columns)
rm(joined_data,mat,por,test_data,two_columns,column_name,first_column,join_by,notjoined_columns)
setwd("~/Documents/IODS/git/IODS-project/")
learning2014 <- read.csv("data/alc.csv",row.names = "X")
alc <- read.csv("data/alc.csv",row.names = "X")
rm(alc_data,learning2014)
colnames(alc)
setwd("~/Documents/IODS/git/IODS-project/")
alc <- read.csv("data/alc.csv",row.names = "X")
#also available from http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt
# Attribute Information:
#
# # Attributes for both student-mat.csv (Math course) and student-por.csv (Portuguese language course) datasets:
# 1 school - student's school (binary: 'GP' - Gabriel Pereira or 'MS' - Mousinho da Silveira)
# 2 sex - student's sex (binary: 'F' - female or 'M' - male)
# 3 age - student's age (numeric: from 15 to 22)
# 4 address - student's home address type (binary: 'U' - urban or 'R' - rural)
# 5 famsize - family size (binary: 'LE3' - less or equal to 3 or 'GT3' - greater than 3)
# 6 Pstatus - parent's cohabitation status (binary: 'T' - living together or 'A' - apart)
# 7 Medu - mother's education (numeric: 0 - none, 1 - primary education (4th grade), 2 Ã¢â‚¬â€œ 5th to 9th grade, 3 Ã¢â‚¬â€œ secondary education or 4 Ã¢â‚¬â€œ higher education)
# 8 Fedu - father's education (numeric: 0 - none, 1 - primary education (4th grade), 2 Ã¢â‚¬â€œ 5th to 9th grade, 3 Ã¢â‚¬â€œ secondary education or 4 Ã¢â‚¬â€œ higher education)
# 9 Mjob - mother's job (nominal: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), 'at_home' or 'other')
# 10 Fjob - father's job (nominal: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), 'at_home' or 'other')
# 11 reason - reason to choose this school (nominal: close to 'home', school 'reputation', 'course' preference or 'other')
# 12 guardian - student's guardian (nominal: 'mother', 'father' or 'other')
# 13 traveltime - home to school travel time (numeric: 1 - <15 min., 2 - 15 to 30 min., 3 - 30 min. to 1 hour, or 4 - >1 hour)
# 14 studytime - weekly study time (numeric: 1 - <2 hours, 2 - 2 to 5 hours, 3 - 5 to 10 hours, or 4 - >10 hours)
# 15 failures - number of past class failures (numeric: n if 1<=n<3, else 4)
# 16 schoolsup - extra educational support (binary: yes or no)
# 17 famsup - family educational support (binary: yes or no)
# 18 paid - extra paid classes within the course subject (Math or Portuguese) (binary: yes or no)
# 19 activities - extra-curricular activities (binary: yes or no)
# 20 nursery - attended nursery school (binary: yes or no)
# 21 higher - wants to take higher education (binary: yes or no)
# 22 internet - Internet access at home (binary: yes or no)
# 23 romantic - with a romantic relationship (binary: yes or no)
# 24 famrel - quality of family relationships (numeric: from 1 - very bad to 5 - excellent)
# 25 freetime - free time after school (numeric: from 1 - very low to 5 - very high)
# 26 goout - going out with friends (numeric: from 1 - very low to 5 - very high)
# 27 Dalc - workday alcohol consumption (numeric: from 1 - very low to 5 - very high)
# 28 Walc - weekend alcohol consumption (numeric: from 1 - very low to 5 - very high)
# 29 health - current health status (numeric: from 1 - very bad to 5 - very good)
# 30 absences - number of school absences (numeric: from 0 to 93)
#
# # these grades are related with the course subject, Math or Portuguese:
# 31 G1 - first period grade (numeric: from 0 to 20)
# 31 G2 - second period grade (numeric: from 0 to 20)
# 32 G3 - final grade (numeric: from 0 to 20, output target)
colnames(alc)
summarise(alc, mean())
summarise(alc, mean(alc_use))
summarise(alc)
summarise(group_by(alc, high_use), m = mean(G3), sd= sd(G3))
summarise(group_by(alc, Medu, m = mean(alc_use), sd= sd(alc_use))
summarise(group_by(alc, Medu), m = mean(alc_use), sd= sd(alc_use))
View(alc)
summarise(group_by(alc, Medu), m = mean(G3), sd= sd(G3))
summarise(group_by(alc, Medu), n(high_use), mean(alc_use))
summarise(group_by(alc, high_use), testin_k_arvo = mean(G3), testin_hajonta = sd(G3))
summarise(group_by(alc, high_use), testin_k_arvo = mean(G3), testin_hajonta = sd(G3), absence)
tarkasteltavat_muuttujat <- c("high_use","G3","Medu","sex","absences")
data <- select(alc, one_of(tarkasteltavat_muuttujat))
glimpse(data)
library(ggplot2)
gather(data) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") +geom_bar()
library(tidyr)
gather(data) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") +geom_bar()
hist(G3)
hist(data$G3)
gather(data) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") +geom_bar()
data %>% group_by(sex,high_use) %>% summarise(count = n(),mean_grade = mean(G3))
ggplot(alc, aes(x = high_use, y = G3, col=sex)) + geom_boxplot() + ylab("grade") + ggtitle("High Alcohol Usage and Test Performance")
gather(data) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") +geom_bar()
View(data)
View(data)
ggplot(alc, aes(x = high_use, y = absence, col=sex)) + geom_boxplot() + ylab("absences") + ggtitle("High Alcohol Usage and Test Performance")
ggplot(alc, aes(x = high_use, y = absences, col=sex)) + geom_boxplot() + ylab("absences") + ggtitle("High Alcohol Usage and Test Performance")
data %>% group_by(sex,high_use) %>% summarise(count = n(), mean_absences = mean(absences))
data %>% group_by(sex,high_use) %>% summarise(count = n(),mean_grade = mean(G3))
ggplot(alc, aes(x = high_use, y = G3, col=sex)) + geom_boxplot() + ylab("grade") + ggtitle("High Alcohol Usage and Test Performance")
data %>% group_by(sex,high_use) %>% summarise(count = n(), mean_absences = mean(absences))
ggplot(alc, aes(x = high_use, y = absences, col=sex)) + geom_boxplot() + ylab("absences") + ggtitle("High Alcohol Usage and Test Performance")
data %>% group_by(sex,high_use) %>% summarise(count = n(), mean_absences = mean(absences))
data %>% group_by(sex,high_use) %>% summarise(count = n(), mean_mothersEdu = mean(Medu))
ggplot(alc, aes(x = high_use, y = Medu, col=sex)) + geom_boxplot() + ylab("Mothers Education") + ggtitle("High Alcohol Usage and Mothers Education")
data %>% group_by(sex,high_use) %>% summarise(count = n(),mean_grade = mean(G3))
data %>% group_by(sex,high_use) %>% summarise(count = n(), mean_mothersEdu = mean(Medu))
ggplot(alc, aes(x = high_use, y = Medu, col=sex)) + geom_boxplot() + ylab("Mothers Education") + ggtitle("High Alcohol Usage and Mothers Education")
ggplot(alc, aes(x = high_use, y = G3, col=sex)) + geom_boxplot() + ylab("grade") + ggtitle("High Alcohol Usage and Test Performance")
ggplot(alc, aes(x = high_use, y = absences, col=sex)) + geom_boxplot() + ylab("absences") + ggtitle("High Alcohol Usage and Test Performance")
data %>% group_by(sex,high_use) %>% summarise(count = n(), mean_freetime = mean(freetime))
tarkasteltavat_muuttujat <- c("high_use","G3","Medu","sex","absences","freetime")
data <- select(alc, one_of(tarkasteltavat_muuttujat))
data %>% group_by(sex,high_use) %>% summarise(count = n(), mean_freetime = mean(freetime))
ggplot(alc, aes(x = high_use, y = freetime, col=sex)) + geom_boxplot() + ylab("Mothers Education") + ggtitle("High Alcohol Usage and freetime")
ggplot(alc, aes(x = high_use, y = freetime, col=sex)) + geom_boxplot() + ylab("Freetime") + ggtitle("High Alcohol Usage and freetime")
data %>% group_by(sex,high_use) %>% summarise(count = n(), mean_freetime = mean(freetime))
ggplot(alc, aes(x = high_use, y = freetime, col=sex)) + geom_histogram() + ylab("Freetime") + ggtitle("High Alcohol Usage and freetime")
ggplot(alc, aes(x = high_use, y = freetime, col=sex)) + geom_bar() + ylab("Freetime") + ggtitle("High Alcohol Usage and freetime")
ggplot(alc, aes(x = high_use, y = freetime, col=sex)) + geom_dotplot() + ylab("Freetime") + ggtitle("High Alcohol Usage and freetime")
ggplot(alc, aes(x = high_use, y = freetime, col=sex)) + geom_boxplot() + ylab("Freetime") + ggtitle("High Alcohol Usage and freetime")
m <- glm(high_use ~ freetime + absences + sex, data = alc, family = "binomial")
summary(m)
coef(m)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind(OR, CI)
data %>% group_by(sex,high_use) %>% summarise(count = n(), mean_freetime = mean(address))
tarkasteltavat_muuttujat <- c("high_use","G3","Medu","sex","absences","freetime","address")
data <- select(alc, one_of(tarkasteltavat_muuttujat))
data %>% group_by(sex,high_use) %>% summarise(count = n(), mean_freetime = mean(address))
ggplot(alc, aes(x = high_use, y = address, col=sex)) + geom_boxplot() + ylab("Freetime") + ggtitle("High Alcohol Usage and freetime")
tarkasteltavat_muuttujat <- c("high_use","G3","Medu","sex","absences","freetime","goout")
data <- select(alc, one_of(tarkasteltavat_muuttujat))
data %>% group_by(sex,high_use) %>% summarise(count = n(), mean_freetime = mean(goout))
ggplot(alc, aes(x = high_use, y = goout, col=sex)) + geom_boxplot() + ylab("Freetime") + ggtitle("High Alcohol Usage and freetime")
data %>% group_by(sex,high_use) %>% summarise(count = n(), mean_goout = mean(goout))
ggplot(alc, aes(x = high_use, y = goout, col=sex)) + geom_boxplot() + ylab("Spend time with friends") + ggtitle("High Alcohol Usage and Going out")
m <- glm(high_use ~ freetime + absences + sex + goout, data = alc, family = "binomial")
summary(m)
coef(m)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind(OR, CI)
m <- glm(high_use ~ freetime + absences + sex + goout, data = alc, family = "binomial")
probabilities <- predict(m, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
probabilities <- predict(m, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
g <- ggplot(alc, aes(x = probability, y = high_use, col=prediction))
g + geom_point()
g + geom_point()
g + geom_point()
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table %>% addmargins()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
cv$delta[1]
library(dplyr)
